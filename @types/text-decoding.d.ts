/** Declaration file generated by dts-gen */
declare module "text-decoding" {
  export type EncodingLabel =
    | keyof typeof EncodingIndexes
    | "utf-8"
    | "utf-16"
    | "utf-16le"
    | "euc-jp"
    | "iso-2022-jp"
    | "iso-8859-1"
    | "iso-8859-11"
    | "shift_jis"
    | "iso-8859-8-i";

  export class TextDecoder {
    constructor(
      label?: EncodingLabel | string,
      options?: { fatal?: boolean; ignoreBOM?: boolean }
    );

    decode(input?: BufferSource, options?: { stream?: boolean }): string;

    serializeStream(stream: Array<number>): string;
  }

  export class TextEncoder {
    constructor(
      label?: EncodingLabel | string,
      options?: { NONSTANDARD_allowLegacyEncoding?: boolean; fatal?: boolean }
    );

    encode(input?: string): Uint8Array;
  }

  export const EncodingIndexes: {
    big5: any[];
    "euc-kr": number[];
    gb18030: number[];
    "gb18030-ranges": number[][];
    ibm866: number[];
    "iso-8859-10": number[];
    "iso-8859-13": number[];
    "iso-8859-14": number[];
    "iso-8859-15": number[];
    "iso-8859-16": number[];
    "iso-8859-2": number[];
    "iso-8859-3": number[];
    "iso-8859-4": number[];
    "iso-8859-5": number[];
    "iso-8859-6": number[];
    "iso-8859-7": number[];
    "iso-8859-8": number[];
    jis0208: number[];
    jis0212: any[];
    "koi8-r": number[];
    "koi8-u": number[];
    macintosh: number[];
    "windows-1250": number[];
    "windows-1251": number[];
    "windows-1252": number[];
    "windows-1253": number[];
    "windows-1254": number[];
    "windows-1255": number[];
    "windows-1256": number[];
    "windows-1257": number[];
    "windows-1258": number[];
    "windows-874": number[];
    "x-mac-cyrillic": number[];
  };

  interface Encoding {
    name: string;
    labels: string[];
  }

  export function getEncoding(label: string): Encoding | null;
}
